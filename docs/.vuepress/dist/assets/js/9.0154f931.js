(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{234:function(e,n,t){"use strict";t.r(n);var r=t(0),a=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"本地项目镜像化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地项目镜像化"}},[e._v("#")]),e._v(" 本地项目镜像化")]),e._v(" "),t("ul",[t("li",[e._v("目录结构")])]),e._v(" "),t("blockquote",[t("p",[e._v("+ dist(vue打包生成的文件)"),t("br"),e._v("\n++ index.html"),t("br"),e._v("\n++ js"),t("br"),e._v("\n++ css"),t("br"),e._v("\n+ default.conf(nginx配置文件)"),t("br"),e._v("\n+ Dockerfile"),t("br"),e._v("\n+ .dockerignore"),t("br")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// nginx配置文件\nserver {\n    listen       80;\n    server_name  localhost;\n\n    index index.html;\n    root /usr/share/nginx/html;\n\n    location /api/ {\n        proxy_pass http://192.168.250.213:10090/sam_mgt/client/;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $remote_addr;\n    }\n}\n\n// Dockerfile\nFROM nginx:1.17.9-alpine\n\n# 复制dist下的文件到/usr/share/nginx/html下\nCOPY dist /usr/share/nginx/html\n\n# 复制default.conf替换/etc/nginx/conf.d/default.conf\nCOPY default.conf /etc/nginx/conf.d/default.conf\n\n# 指定端口\nEXPOSE 8089\n\n# 运行nginx\nCMD ["nginx", "-g", "daemon off;"]\n\n\\\\ .dockerignore\nfrontend/\nconfig/\n\n# Editor directories and files\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n\n')])])]),t("ul",[t("li",[e._v("首先进入对应目录")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd path\n")])])]),t("ul",[t("li",[e._v("打包镜像")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker image build ./ -t docker-test:1.0.0\n\n//  './' --\x3e 基于当前路径\n//  'docker-test' --\x3e 镜像名称\n//  '1.0.0' --\x3e 版本号\n")])])]),t("ul",[t("li",[e._v("创建容器")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker container create -p 8089:80 docker-test:1.0.0\n\n// `8089` --\x3e 端口号\n// `docker-test:1.0.0` --\x3e 目标镜像\n\n")])])]),t("ul",[t("li",[e._v("运行容器")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker container ls -a 查看目标容器的id\ndocker container start xxxxx(容器id)\n")])])]),t("ul",[t("li",[e._v("打开页面查看是否成功")])]),e._v(" "),t("h3",{attrs:{id:"相关命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关命令"}},[e._v("#")]),e._v(" 相关命令")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("获取镜像 --\x3e docker pull [镜像名称]:[镜像版本号]")])]),e._v(" "),t("li",[t("p",[e._v("列出镜像 --\x3e docker image ls / docker image ls -a / docker image ls [镜像名称]")])]),e._v(" "),t("li",[t("p",[e._v("删除镜像 --\x3e docker rm [镜像名称]:[镜像版本号] / docker rm [镜像id]")])]),e._v(" "),t("li",[t("p",[e._v("构建镜像 --\x3e docker image build [目标目录路径] -t [镜像名称]:[镜像版本号]")])]),e._v(" "),t("li",[t("p",[e._v("启动容器 --\x3e docker run [容器名称]:[容器版本号] / docker run [容器id]")])]),e._v(" "),t("li",[t("p",[e._v("停止容器 --\x3e docker stop [容器名称]:[容器版本号] / docker stop [容器id]")])]),e._v(" "),t("li",[t("p",[e._v("列出容器 --\x3e docker container ls -a")])]),e._v(" "),t("li",[t("p",[e._v("获取容器输出信息 --\x3e docker container logs [容器名称]:[容器版本号] / docker container logs [容器id]")])]),e._v(" "),t("li",[t("p",[e._v("进入容器 --\x3e docker exec [容器名称]:[容器版本号] / docker exec [容器id]")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);